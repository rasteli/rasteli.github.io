{"version":3,"sources":["components/EngineForm/index.js","components/SearchForm/index.js","components/EngineItem/index.js","services/api.js","App.js","components/SingUpForm/index.js","SignUp.js","components/ConfirmationForm/index.js","Confirmation.js","index.js"],"names":["EngineForm","onSubmit","useState","model","setModel","frequency","setFrequency","rpm","setRPM","power","setPower","wire","setWire","turns","setTurns","pace","setPace","e","a","preventDefault","className","htmlFor","type","id","required","autoComplete","value","onChange","target","SearchHeader","role","aria-label","EngineItem","engine","api","axios","create","baseURL","App","engines","setEngines","byModel","setByModel","isSearch","setIsSearch","get","response","data","post","useEffect","loadEngines","map","key","_id","SignUpForm","full_name","setName","email","setEmail","password","setPassword","to","SignUp","users","setUsers","user","loadUsers","ConfirmationForm","confirmationToken","setToken","Confirmation","put","ReactDOM","render","StrictMode","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.7b3b19c5.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nexport default function EngineForm({ onSubmit }) {\r\n    const [model, setModel] = useState(\"\")\r\n    const [frequency, setFrequency] = useState(\"\")\r\n    const [rpm, setRPM] = useState(\"\")\r\n    const [power, setPower] = useState(\"\")\r\n    const [wire, setWire] = useState(\"\")\r\n    const [turns, setTurns] = useState(\"\")\r\n    const [pace, setPace] = useState(\"\")\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        await onSubmit({\r\n            model,\r\n            frequency,\r\n            rpm,\r\n            power,\r\n            wire,\r\n            turns,\r\n            pace,\r\n        })\r\n\r\n        setModel(\"\")\r\n        setFrequency(\"\")\r\n        setRPM(\"\")\r\n        setPower(\"\")\r\n        setWire(\"\")\r\n        setTurns(\"\")\r\n        setPace(\"\")\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-group\">\r\n                <div className=\"input-block\">\r\n                    <label htmlFor=\"model\">Modelo</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"model\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        value={model}\r\n                        onChange={(e) => setModel(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-block\">\r\n                    <label htmlFor=\"hz\">Frequência</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"hz\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        value={frequency}\r\n                        onChange={(e) => setFrequency(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-block\">\r\n                    <label htmlFor=\"rpm\">RPM</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"rpm\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        value={rpm}\r\n                        onChange={(e) => setRPM(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n                <div className=\"input-block\">\r\n                    <label htmlFor=\"power\">Potência CV</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"power\"\r\n                        required\r\n                        value={power}\r\n                        onChange={(e) => setPower(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-block\">\r\n                    <label htmlFor=\"wire\">Fio AWG</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"wire\"\r\n                        required\r\n                        value={wire}\r\n                        onChange={(e) => setWire(e.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"input-block\">\r\n                    <label htmlFor=\"turns\">Espiras</label>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"turns\"\r\n                        required\r\n                        value={turns}\r\n                        onChange={(e) => setTurns(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"input-block last-box\">\r\n                <label htmlFor=\"pace\">Passo</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"pace\"\r\n                    required\r\n                    value={pace}\r\n                    onChange={(e) => setPace(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <button type=\"submit\">Salvar</button>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useState } from \"react\"\r\n\r\nexport default function SearchHeader({ onSubmit }) {\r\n    const [model, setModel] = useState(\"\")\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        await onSubmit(model)\r\n\r\n        setModel(\"\")\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-block last-box\">\r\n                <label htmlFor=\"search-box\">Buscar motor por modelo</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search-box\"\r\n                    required\r\n                    value={model}\r\n                    onChange={(e) => setModel(e.target.value)}\r\n                />\r\n            </div>\r\n            <button type=\"submit\">\r\n                <span role=\"img\" aria-label=\"magnifier\">\r\n                    &#128269;\r\n                </span>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./styles.css\"\r\n\r\nexport default function EngineItem({ engine }) {\r\n    return (\r\n        <li>\r\n            <header>\r\n                <h3>Modelo: {engine.model}</h3>\r\n            </header>\r\n            <div id=\"engine-spec\">Frequência: {engine.frequency} Hz</div>\r\n            <div id=\"engine-spec\">RPM: {engine.rpm}</div>\r\n            <div id=\"engine-spec\">Potência: {engine.power} CV</div>\r\n            <div id=\"engine-spec\">Fio AWG: {engine.wire}</div>\r\n            <div id=\"engine-spec\">Espiras: {engine.turns}</div>\r\n            <div id=\"engine-spec\">Passo: {engine.pace}</div>\r\n        </li>\r\n    )\r\n}\r\n","import axios from \"axios\"\r\n\r\nconst api = axios.create({\r\n    baseURL: \"http://localhost:3333\",\r\n})\r\n\r\nexport default api\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport EngineForm from \"./components/EngineForm\"\r\nimport SearchForm from \"./components/SearchForm\"\r\nimport EngineItem from \"./components/EngineItem\"\r\n\r\nimport api from \"./services/api\"\r\n\r\nimport \"./styles/App.css\"\r\nimport \"./styles/Sidebar.css\"\r\nimport \"./styles/Main.css\"\r\nimport \"./styles/global.css\"\r\n\r\nfunction App() {\r\n    const [engines, setEngines] = useState([])\r\n    const [byModel, setByModel] = useState([])\r\n    const [isSearch, setIsSearch] = useState(false)\r\n\r\n    useEffect(() => {\r\n        async function loadEngines() {\r\n            const response = await api.get(\"/engines\")\r\n\r\n            setEngines(response.data)\r\n        }\r\n\r\n        loadEngines()\r\n    }, [])\r\n\r\n    async function handleGetEngine(model) {\r\n        const response = await api.get(`/search?model=${model}`)\r\n\r\n        setByModel(response.data)\r\n        setIsSearch(true)\r\n    }\r\n\r\n    async function handleAddEngine(data) {\r\n        const response = await api.post(\"/engines\", data)\r\n\r\n        setEngines([...engines, response.data])\r\n        setIsSearch(false)\r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <aside>\r\n                <h2>Formulário de cadastro de motores</h2>\r\n                <EngineForm onSubmit={handleAddEngine} />\r\n                <SearchForm onSubmit={handleGetEngine} />\r\n            </aside>\r\n            <main>\r\n                <ul>\r\n                    {isSearch &&\r\n                        byModel.map((engine) => (\r\n                            <EngineItem key={engine._id} engine={engine} />\r\n                        ))}\r\n                </ul>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React, { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport default function SignUpForm({ onSubmit }) {\r\n    const [full_name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        await onSubmit({\r\n            full_name,\r\n            email,\r\n            password,\r\n        })\r\n\r\n        setName(\"\")\r\n        setEmail(\"\")\r\n        setPassword(\"\")\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-block\">\r\n                <label htmlFor=\"name\">Nome Completo</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    value={full_name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"email\"\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n                <label htmlFor=\"pass\">Senha</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"pass\"\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <button type=\"submit\">\r\n                <Link to=\"/confirmation\">Cadastrar</Link>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\n\r\nimport SignUpForm from \"./components/SingUpForm\"\r\nimport api from \"./services/api\"\r\n\r\nimport \"./styles/Sidebar.css\"\r\nimport \"./styles/App.css\"\r\n\r\nfunction SignUp() {\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(() => {\r\n        async function loadUsers() {\r\n            const response = await api.get(\"/users/signup\")\r\n\r\n            setUsers(response.data)\r\n        }\r\n\r\n        loadUsers()\r\n    }, [])\r\n\r\n    async function handleAddUsers(data) {\r\n        const response = await api.post(\"/users/signup\", data)\r\n\r\n        // const message = response.data.message\r\n\r\n        setUsers([...users, response.data.user])\r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <aside className=\"signup\">\r\n                <SignUpForm onSubmit={handleAddUsers} />\r\n            </aside>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React, { useState } from \"react\"\r\n\r\nexport default function ConfirmationForm({ onSubmit }) {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [confirmationToken, setToken] = useState(\"\")\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        await onSubmit({\r\n            confirmationToken,\r\n            email,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-block\">\r\n                <label htmlFor=\"token\">Token de acesso</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"token\"\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    value={confirmationToken}\r\n                    onChange={(e) => setToken(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n                <label htmlFor=\"name\">Email</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"email\"\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <button type=\"submit\">Confirmar</button>\r\n        </form>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nimport ConfirmationForm from \"./components/ConfirmationForm\"\r\n\r\nimport api from \"./services/api\"\r\n\r\nimport \"./styles/Sidebar.css\"\r\nimport \"./styles/App.css\"\r\n\r\nfunction Confirmation() {\r\n    async function handleConfirmAccount(data) {\r\n        await api.put(\"/confirmation\", data)\r\n\r\n        // const message = response.data.message\r\n    }\r\n\r\n    return (\r\n        <div id=\"app\">\r\n            <aside className=\"confirmation\">\r\n                <ConfirmationForm onSubmit={handleConfirmAccount} />\r\n            </aside>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirmation\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\n\r\nimport App from \"./App\"\r\nimport SignUp from \"./SignUp\"\r\nimport Confirmation from \"./Confirmation\"\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact={true} component={SignUp} />\r\n                <Route path=\"/engines\" component={App} />\r\n                <Route path=\"/confirmation\" component={Confirmation} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}